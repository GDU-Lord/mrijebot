import { procedure } from "../core/chain.js";
import { createButtons, keyboard, menuProcedure, routeCallback } from "../custom/hooks.js";
import { backOption } from "./back.js";
import { $form } from "./form.js";
import { lands } from "./land.js";

export const landInfoButtons = createButtons(async state => {
  const buttons: keyboard = [];
  if(state.data.user) {
    if(state.data.user[5] === lands[state.data.land as keyof typeof lands][0] && state.data.user[6] !== "–Ø –ø—Ä–æ–∂–∏–≤–∞—é –∑–∞ –º–µ–∂–∞–º–∏ —Ü—ñ—î—ó –∑–µ–º–ª—ñ —ñ —Ö–æ—á—É –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è —è–∫ –≥—ñ—Å—Ç—å")
      buttons.push([["‚úÖ–û–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ", 2]]);
    else {
      buttons.push([["üëã–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è —è–∫ –ì—ñ—Å—Ç—å", 1]]);
      buttons.push([["‚ö†Ô∏è–ó–º—ñ–Ω–∏—Ç–∏ –æ—Å–µ—Ä–µ–¥–æ–∫!", 0]]);
    }
  }
  else
    buttons.push([["‚úÖ–°—Ç–∞—Ç–∏ –£—á–∞—Å–Ω–∏–∫–æ–º", 3]]);
  buttons.push([["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 4]]);
  return buttons;
});

backOption(4, landInfoButtons);
routeCallback(landInfoButtons, 0, $form);
routeCallback(landInfoButtons, 1, $form);
routeCallback(landInfoButtons, 2, $form);
routeCallback(landInfoButtons, 3, $form);

export const $landInfo = procedure();
menuProcedure($landInfo)
  .send("–¢—É—Ç —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–µ–º–ª—é {data.land}", landInfoButtons.get);