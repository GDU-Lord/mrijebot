import { Land } from "../../../app/entities/land.entity.js";
import { keyboard } from "../../../custom/hooks/buttons.js";
import { saveValue } from "../../../custom/hooks/options.js";
import { StateType } from "../../../custom/hooks/state.js";
import { optionsField } from "../../presets/options.js";

export const $myLandsList = optionsField<StateType>(
  async state => {
    return `<b><u>üìç–ü–∞–Ω–µ–ª—å –û—Å–µ—Ä–µ–¥–∫—ñ–≤: –ú–æ—ó –æ—Å–µ—Ä–µ–¥–∫–∏</u></b>\n\n–û–±–µ—Ä–∏ –æ—Å–µ—Ä–µ–¥–æ–∫, –ø–∞–Ω–µ–ª—å —è–∫–æ–≥–æ —Ö–æ—á–µ—à –≤—ñ–¥–∫—Ä–∏—Ç–∏!`;
  },
  async state => {
    let member = state.data.storage.user!.memberships.filter(m => m.status === "participant").map(m => [[m.land.name, m.landId]]);
    let guest = state.data.storage.user!.memberships.filter(m => m.status === "guest").map(m => [[m.land.name, m.landId]]);
    const landsById = state.data.storage.user!.memberships.map(m => m.land);
    state.data.options["profile:landsById"] = {};
    landsById.forEach(land => state.data.options["profile:landsById"][land.id] = land);
    return [...member, ...guest, [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0]]] as keyboard;
  },
  saveValue("profile:landId", 0)
);

export const $landPanel = optionsField<StateType>(
  async state => {
    const landId = state.data.options["profile:landId"];
    const land = state.data.options["profile:landsById"][landId] as Land;
    const roles = `\n<b>–¢–≤–æ—ó —Ä–æ–ª—ñ</b>: –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –û—Å–µ—Ä–µ–¥–∫—É, –ü—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫, –Ü–Ω—Å–ø–µ–∫—Ç–æ—Ä –ú–∞–π—Å—Ç—Ä—ñ–≤`;
    const isMember = !!land.members.find(m => m.userId === state.data.storage.user?.id && m.status === "participant");
    state.data.options["profile:chosenLand"] = land;
    const text = isMember ? `–¢–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π —è–∫ –£–ß–ê–°–ù–ò–ö –≤ —Ü—å–æ–º—É –û—Å–µ—Ä–µ–¥–∫—É.` : "–¢–∏ –≥—ñ—Å—Ç—å —É —Ü—å–æ–º—É –æ—Å–µ—Ä–µ–¥–∫—É.";
    // display roles here
    return `<b><u>üìç–ü–∞–Ω–µ–ª—å –û—Å–µ—Ä–µ–¥–∫—ñ–≤: ${land.name}</u></b>\n\n${text}\n${roles}`;
  },
  async state => {
    // add admin options
    // add option to leave 
    const land = state.data.options["profile:chosenLand"] as Land;
    const isMember = !!land.members.find(m => m.userId === state.data.storage.user?.id && m.status === "participant");
    let keyboard: keyboard = [[["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0]]];
    if(!isMember) {
      keyboard = [[["üëã–ü–æ–∫–∏–Ω—É—Ç–∏ –æ—Å–µ—Ä–µ–¥–æ–∫", 1]], ...keyboard];
    }
    else {
      keyboard = [[["üîÅ–ó–º—ñ–Ω–∏—Ç–∏ —á–ª–µ–Ω—Å—Ç–≤–æ", 2]], ...keyboard];
    }
    return keyboard;
  }
);