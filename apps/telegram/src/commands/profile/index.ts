import { afterInit } from "../../afterInit";
import { getLands, getLandsById, getUserMemberships } from "../../api";
import { Bot } from "../../core";
import { CHAIN } from "../../core/actions";
import { keyboard } from "../../custom/hooks/buttons";
import { StateType } from "../../custom/hooks/state";
import { CONTROL, MENU } from "../mapping";
import { optionsField } from "../presets/options";
import { isGlobalAdmin } from "./admin/hooks";
import { parseRoles } from "./roles";
import { profileRoutes } from "./routes";

afterInit.push(profileRoutes);

export const $main = optionsField<StateType>(
  async state => {
    if(!state.data.storage.user) return "–ü–û–ú–ò–õ–ö–ê!";
    const memberships = await getUserMemberships(state.data.storage.user);
    let participant = memberships.participant.map(m => m.land.name).join(", ");
    let guest = memberships.guest.map(m => m.land.name).join(", ");
    if(participant !== "") participant = "\n<b>–ß–ª–µ–Ω—Å—Ç–≤–æ</b>: " + participant;
    if(guest !== "") guest = "\n<b>–ì—ñ—Å—Ç—å</b>: " + guest;
    // const status = "\n<b>–°—Ç–∞—Ç—É—Å</b>: –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –Ü–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏ (Koordinator)";
    const status = `\n<b>–°—Ç–∞—Ç—É—Å</b>: <i>${(await parseRoles(state, ["name", "publicName"], "all", "position", true))[0]}</i>`;
    // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –Ü–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏ (Koordinator*in)
    // –ö—É—Ä–∞—Ç–æ—Ä –ó–∞—Å–Ω—É–≤–∞–Ω–Ω—è –û—Å–µ—Ä–µ–¥–∫—É (Gr√ºndungskurator*in der Ortsgruppe)
    // –ó–∞—Å—Ç—É–ø–Ω–∏–∫ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞ –Ü–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏ (Stellertretende*r Koordinator*in)
    // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –û—Å–µ—Ä–µ–¥–∫—É (Ortskurator*in)
    // –û—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä –û—Å–µ—Ä–µ–¥–∫—É (Organisator*in)
    // –£—á–∞—Å–Ω–∏–∫ –û—Å–µ—Ä–µ–¥–∫—É (Teilnehmer*in)
    // –ì—ñ—Å—Ç—å –û—Å–µ—Ä–µ–¥–∫—É (Gast)
    const chatMember = await Bot.getChatMember(state.core.chatId, +state.data.storage.user.telegramId);
    return `<b><u>üë§–ü—Ä–æ—Ñ—ñ–ª—å</u></b>\n\n<b>–Ü–º'—è</b>: ${chatMember.user.first_name}\n<b>–ó–∞–π–º–µ–Ω–Ω–∏–∫–∏</b>: <i>–≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ</i>\n<b>Email</b>: {data.storage.user.email}${status}${participant}${guest}`;
  },
  async state => {
    const buttons: keyboard = [
      [["üìç–ú–æ—ó –æ—Å–µ—Ä–µ–¥–∫–∏", MENU.option[0]], ["üìß –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ*", MENU.option[1]]],
      [["üíô–ü–∞–Ω–µ–ª—å –≥—Ä–∞–≤—Ü—è", MENU.option[2]], ["üíõ–ü–∞–Ω–µ–ª—å –º–∞–π—Å—Ç—Ä–∞", MENU.option[3]]],
      [["‚öôÔ∏è–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–≥–æ–ª–æ—à–µ–Ω—å*", MENU.option[4]]],
      [["üí≥–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π–Ω–∞ –ö–∞—Ä—Ç–∫–∞", MENU.option[5]]],
    ];
    if(await isGlobalAdmin(state)) buttons.push([["¬ÆÔ∏è–ê–¥–º—ñ–Ω—Å—å–∫–∞ –ü–∞–Ω–µ–ª—å", MENU.option[6]]]);
    buttons.push([["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", CONTROL.back]]);
    return buttons;
  }
);