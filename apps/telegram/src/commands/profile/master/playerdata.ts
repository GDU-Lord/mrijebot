import TelegramBot from "node-telegram-bot-api";
import { StateType } from "../../../custom/hooks/state";
import { optionsOtherField } from "../../presets/optionsOther";
import { optionsField } from "../../presets/options";
import { CONTROL } from "../../mapping";

function getUserData(msg: TelegramBot.Message): [string | null, number | null] {
  for(const e of msg?.entities ?? []) {
    if(e.type === "mention") {
      const username = msg.text?.match(/@[A-Za-z0-9_]{0,}/g)?.[0].replace("@", "") ?? null;
      // find user by username
      return [username, null];
    }
  }
  // analyse the card
  const text = msg.text;
  if(text == null) return [null, null];
  const match = text.match(/(?<=TelegramId:\s*)\d+/g)?.[0] ?? "";
  const telegramId = +match;
  return [null, telegramId];
}

export const $playerData = optionsOtherField<StateType>(
  "lastInput",
  async state => {
    return `<b><u>üë§–ü–∞–ª–µ–Ω—å –º–∞–π—Å—Ç—Ä–∞: –î–∞–Ω—ñ –≥—Ä–∞–≤—Ü—è</u></b>\n\n–¢–µ–≥–Ω–∏ —Å–≤–æ–≥–æ –≥—Ä–∞–≤—Ü—è!\n\n‚ùï–Ø–∫—â–æ –≤ –Ω—å–æ–≥–æ/–Ω–µ—ó –Ω–µ–º–∞—î —Ç–µ–≥—É –≤ –¢–µ–ª–µ–≥—Ä–∞–º—ñ, –ø–æ–ø—Ä–æ—Å–∏ –π–æ–≥–æ/—ó—ó –ø–µ—Ä–µ—Å–ª–∞—Ç–∏ —Ç–æ–±—ñ —Å–≤–æ—é –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π–Ω—É –ö–∞—Ä—Ç–∫—É.\n‚ùï–á—ó –º–æ–∂–Ω–∞ –∑–Ω–∞–π—Ç–∏ —É <b>–ü—Ä–æ—Ñ—ñ–ª—å</b> > <b>–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π–Ω–∞ –ö–∞—Ä—Ç–∫–∞</b>\n‚ùï–ü–µ—Ä–µ—à–ª–∏ —Ü—é –∫–∞—Ä—Ç–∫—É —Å—é–¥–∏ –≤ —á–∞—Ç –∑–∞–º—ñ—Å—Ç—å —Ç–µ–≥–∞ –≥—Ä–∞–≤—Ü—è (—É –≤–∏–≥–ª—è–¥—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è)!`;
  },
  [
    [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", CONTROL.back]]
  ],
  (text, msg) => {
    const [username, telegramId] = getUserData(msg);
    if(username) {
      console.log("username", username);
      return true
    }
    if(telegramId) {
      console.log("telegramId", telegramId);
      return true;
    }
    return false;
  },
  async () => {},
  async state => {
    const data = "User data here";
    state.data.options["masterPanel:userData"] = data;
    await state.call($displayPlayerData.proc);
  }
);

export const $displayPlayerData = optionsField<StateType>(
  async state => {
    return `<b><u>üë§–ü–∞–ª–µ–Ω—å –º–∞–π—Å—Ç—Ä–∞: –î–∞–Ω—ñ –≥—Ä–∞–≤—Ü—è –Ü–ú'–Ø</u></b>\n\n${state.data.options["masterPanel:userData"]}`;
  },
  [
    [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", CONTROL.back]]
  ]
);