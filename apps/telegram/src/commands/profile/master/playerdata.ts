import TelegramBot from "node-telegram-bot-api";
import { StateType } from "../../../custom/hooks/state";
import { optionsOtherField } from "../../presets/optionsOther";
import { optionsField } from "../../presets/options";
import { CONTROL } from "../../mapping";
import { Bot } from "../../../core";
import { getUser } from "../../../api";
import { CHAIN } from "../../../core/actions";

function getUserId(msg: TelegramBot.Message): number | null {
  const text = msg.text;
  if(!text) return null;
  const userId = text.match(/(?<=UserId:\s*)\d+/g)?.[0] ?? "";
  return +userId;
}

export const $playerData = optionsOtherField<StateType>(
  "lastInput",
  async state => {
    console.log("?");
    return `<b><u>üë§–ü–∞–ª–µ–Ω—å –ú–∞–π—Å—Ç—Ä–∞: –î–∞–Ω—ñ –≥—Ä–∞–≤—Ü—è</u></b>\n\n‚ÑπÔ∏è –ü–æ–ø—Ä–æ—Å–∏ –≥—Ä–∞–≤—Ü—è –ø–µ—Ä–µ—Å–ª–∞—Ç–∏ —Ç–æ–±—ñ —Å–≤–æ—é –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π–Ω—É –ö–∞—Ä—Ç–∫—É.\n\n‚ÑπÔ∏è –á—ó –º–æ–∂–Ω–∞ –∑–Ω–∞–π—Ç–∏ —É <b>–ü—Ä–æ—Ñ—ñ–ª—å</b> > <b>–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π–Ω–∞ –ö–∞—Ä—Ç–∫–∞</b>\n\n‚ÑπÔ∏è –ü–µ—Ä–µ—à–ª–∏ —Ü—é –∫–∞—Ä—Ç–∫—É —Å—é–¥–∏ –≤ —á–∞—Ç –∑–∞–º—ñ—Å—Ç—å —Ç–µ–≥–∞ –≥—Ä–∞–≤—Ü—è (—É –≤–∏–≥–ª—è–¥—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è)!`;
  },
  [
    [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", CONTROL.back]]
  ],
  (text, msg) => {
    const userId = getUserId(msg);
    return !!userId;
  },
  async () => {},
  async state => {
    const userId = getUserId(state.lastInput as TelegramBot.Message)!;
    console.log(userId);
    const user = await getUser(userId);
    console.log(user);
    if(!user) {
      state.data.options["masterPanel:userData"] = "–ü–æ–º–∏–ª–∫–∞! –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!";
      state.call($displayPlayerData.proc);
      return CHAIN.EXIT;
    }
    const gamesPlayed = user.playerGamesPlayed;
    const systemsPlayed: string = [...user.playerPlayedGameSystems.map(s => s.name), ...user.customPlayerPlayedGameSystems].join("; ");
    const systemsPreferred = [...user.playerPreferredGameSystems.map(s => s.name), ...user.customPlayerPreferredGameSystems].join("; ");
    const message = user.playerMasterMessage;
    const triggers = user.playerTriggers;
    state.data.options["masterPanel:userData"] = `<b>üîÆ–ó—ñ–≥–∞–Ω–æ —Å–µ—Å—ñ–π:</b> ~${gamesPlayed}\n\n<b>‚ô¶Ô∏è–î–æ—Å–≤—ñ–¥ —É —Å–∏—Å—Ç–µ–º–∞—Ö:</b> ${systemsPlayed}\n\n<b>üé≤ –¶—ñ–∫–∞–≤–ª—è—Ç—å —Å–∏—Å—Ç–µ–º–∏:</b>\n${systemsPreferred}\n\n<b>‚ÄºÔ∏è–¢—Ä–∏–≥–µ—Ä–∏:</b>\n${triggers}\n\n<b>üíå –ü–æ—Å–ª–∞–Ω–Ω—è –º–∞–π—Å—Ç—Ä—É:</b>\n${message}`;
    state.call($displayPlayerData.proc);
    return CHAIN.EXIT;
  }
);

export const $displayPlayerData = optionsField<StateType>(
  async state => {
    console.log("OPTION");
    return `<b><u>üë§–ü–∞–ª–µ–Ω—å –ú–∞–π—Å—Ç—Ä–∞: –î–∞–Ω—ñ –≥—Ä–∞–≤—Ü—è</u></b>\n\n${state.data.options["masterPanel:userData"]}`;
  },
  [
    [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", CONTROL.back]]
  ]
);