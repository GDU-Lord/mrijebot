import { getSystems } from "../../../api";
import { keyboard } from "../../../custom/hooks/buttons";
import { getInputOptionsList } from "../../../custom/hooks/inputs";
import { saveValue, toggleButtons, toggleValue, toggleValueInput } from "../../../custom/hooks/options";
import { StateType } from "../../../custom/hooks/state";
import { text } from "../../form/validators";
import { CONTROL, MENU } from "../../mapping";
import { optionsField } from "../../presets/options";
import { optionsOtherField } from "../../presets/optionsOther";

export const $experience = optionsField(async state => {
  return `<b><u>üë§–ü—Ä–æ—Ñ—ñ–ª—å: –î–æ—Å–≤—ñ–¥ –≥—Ä–∞–≤—Ü—è</u></b>\n\n–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –∑–º—ñ–Ω–∏—Ç–∏ –¥–∞–Ω—ñ —Å–≤–æ–≥–æ –¥–æ—Å–≤—ñ–¥—É –≤ –ù–†–Ü (—è–∫ –≥—Ä–∞–≤—Ü—è)`;
},
[
  [["üé≤ –ó—ñ–≥—Ä–∞–Ω—ñ —Å–∏—Å—Ç–µ–º–∏", MENU.option[0]], ["‚ô¶Ô∏è –ó—ñ–≥—Ä–∞–Ω—ñ —Å–µ—Å—ñ—ó", MENU.option[1]]],
  [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", CONTROL.back]]
]);

export const $systemsPlayed = optionsOtherField(
  "lastInput",
  async state => {
    state.data.storage.systems = await getSystems() ?? [];
    const list = getInputOptionsList(state, "playerPanel", "systemsPlayed", text());
    return `<b><u>üë§–ü—Ä–æ—Ñ—ñ–ª—å: –î–æ—Å–≤—ñ–¥ –≥—Ä–∞–≤—Ü—è</u></b>\n\nüé≤ –£ —è–∫–∏—Ö –ù–∞—Å—Ç—ñ–ª—å–Ω–∏—Ö –†–æ–ª—å–æ–≤–∏—Ö –°–∏—Å—Ç–µ–º–∞—Ö —Ç–∏ –º–∞—î—à –¥–æ—Å–≤—ñ–¥ —è–∫ –≥—Ä–∞–≤–µ—Ü—å?\n\n‚ÑπÔ∏è –¢–∏ –º–æ–∂–µ—à –¥–æ–¥–∞—Ç–∏ –≤–ª–∞—Å–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏, –≤–≤—ñ–≤—à–∏ —ó—Ö —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ.\n‚ÑπÔ∏è –©–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ –≤–≤–µ–¥–µ–Ω–∏–π –≤—Ä—É—á–Ω—É –≤–∞—Ä—ñ–∞–Ω—Ç, –≤–≤–µ–¥–∏ –π–æ–≥–æ –Ω–∞–∑–≤—É —â–µ —Ä–∞–∑!\n\n‚úçÔ∏è<b>–í–≤–µ–¥–µ–Ω—ñ –≤—Ä—É—á–Ω—É:</b> ${list.join("; ")}`;
  },
  toggleButtons<StateType>(
      "playerPanel:systemsPlayed", 
      async state => {
        const buttons = state.data.storage.systems.map(s => {
          return [[s.name, s.id]];
        }) as keyboard;
        return [
          ...buttons, 
          [["‚úîÔ∏è–ó–±–µ—Ä–µ–≥—Ç–∏", CONTROL.back]],
        ];
      }, 
      "‚úÖ ",
      "", 
      CONTROL.back),
  text(),
  toggleValue("playerPanel:systemsPlayed", CONTROL.back),
  toggleValueInput("playerPanel:systemsPlayed")
);

export const $gamesPlayed = optionsField<StateType>(
  async state => {
    return `<b><u>üë§–ü—Ä–æ—Ñ—ñ–ª—å: –î–æ—Å–≤—ñ–¥ –≥—Ä–∞–≤—Ü—è</u></b>\n\nüé≤ –°–∫—ñ–ª—å–∫–∏ –≤ —Ç–µ–±–µ –¥–æ—Å–≤—ñ–¥—É –≤ –ù–†–Ü —è–∫ —É –≥—Ä–∞–≤—Ü—è?`;
  },
  async state => {
    const list = new Array(4).fill("");
    const games = state.data.options["playerPanel:gamesPlayed"] as number;
    if(games <= 5) list[0] = "‚úÖ ";
    if(games > 5 && games <= 10) list[1] = "‚úÖ ";
    if(games > 10 && games <= 50) list[2] = "‚úÖ ";
    if(games > 50) list[3] = "‚úÖ ";
    return [
      [[list[0] + "–î–æ 5 —Å–µ—Å—ñ–π", 5]],
      [[list[1] + "–í—ñ–¥ 6 –¥–æ 10 —Å–µ—Å—ñ–π", 10]],
      [[list[2] + "–í—ñ–¥ 11 –¥–æ 50 —Å–µ—Å—ñ–π", 50]],
      [[list[3] + "–ü–æ–Ω–∞–¥ 50 —Å–µ—Å—ñ–π", 100]],
      [["‚úîÔ∏è–ó–±–µ—Ä–µ–≥—Ç–∏", CONTROL.back]],
    ]
  },
  saveValue("playerPanel:gamesPlayed", CONTROL.back)
);