import { afterInit } from "../../../afterInit";
import { getLands } from "../../../api/land";
import { getLastCallback } from "../../../custom/hooks/buttons";
import { saveValue, toggleButtons, toggleValue, toggleValueInput } from "../../../custom/hooks/options";
import { StateType } from "../../../custom/hooks/state";
import { optionsField } from "../../presets/options";
import { optionsOtherField } from "../../presets/optionsOther";
import { textField } from "../../presets/textfield";
import { email, text } from "../validators";
import { registerRoutes } from "./routes";

afterInit.push(registerRoutes);

export const $email = textField(
  "form:email", 
  async state => {
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –ö–æ–Ω—Ç–∞–∫—Ç</u></b>\n\n–ù–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–∞ —Ç–≤–æ—è Email-–∞–¥—Ä–µ—Å–∞, —â–æ–± –∑–≤'—è–∑–∞—Ç–∏—Å—è –∑ —Ç–æ–±–æ—é –ø—ñ–∑–Ω—ñ—à–µ!\n\n–í–≤–µ–¥–∏ —ó—ó —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ:";
  },
  email()
);

export const $land = optionsField<StateType>(
  async state => {
    const lands = state.data.storage.lands = await getLands();
    if(!lands) return "–ü–û–ú–ò–õ–ö–ê!";
    const list = lands.map(land => `"${land.name}":${land.region}`);
    return `<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –û—Å–µ—Ä–µ–¥–æ–∫</u></b>\n\n–£ –Ω–∞—Å —î —Ä—ñ–∑–Ω—ñ –û—Å–µ—Ä–µ–¥–∫–∏ (—Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω—ñ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏) –ø–æ –≤—Å—ñ–π –ù—ñ–º–µ—á—á–∏–Ω—ñ. –û–±–µ—Ä–∏ —Ç—É, –Ω–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó —è–∫–æ—ó —Ç–∏ –ø—Ä–æ–∂–∏–≤–∞—î—à! –ü—ñ—Å–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à –¥–æ—Å—Ç—É–ø –¥–æ —á–∞—Ç—ñ–≤ —Å–≤–æ–≥–æ –û—Å–µ—Ä–µ–¥–∫—É!\n\n${list}`;
  },
  async state => {
    return state.data.storage.lands.map(land => [[land.name, land.id]]);
  },
  saveValue("form:land", 0)
);

export const $city = textField(
  "form:city", 
  async state => {
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –û—Å–µ—Ä–µ–¥–æ–∫</u></b>\n\n–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É –Ω–∞—Å–µ–ª–µ–Ω–æ–≥–æ –ø—É–Ω–∫—Ç—É, –≤ —è–∫–æ–º—É —Ç–∏ –ø—Ä–æ–∂–∏–≤–∞—î—à:";
  },
  text()
);

export const $source = optionsField(
  async state => {
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</u></b>\n\n–Ø–∫ —Ç–∏ –¥—ñ–∑–Ω–∞–≤(–ª–∞/–ª–∏)—Å—è –ø—Ä–æ –ú—Ä—ñ—î—Ç–≤–æ—Ä—Ü—ñ–≤?";
  },
  [
    [["Instagram", 2]],
    [["Linked-In", 3]],
    [["–í–µ–±—Å–∞–π—Ç", 4]],
    [["–ß–µ—Ä–µ–∑ –∑–Ω–∞–π–æ–º–∏—Ö", 5]],
    [["–ß–∞—Ç-–±–æ—Ç –¥–ª—è –∑–Ω–∞–π–æ–º—Å—Ç–≤", 6]],
    [["–Ø –≤–∂–µ —É —Å–ø—ñ–ª—å–Ω–æ—Ç—ñ", 7]],
    [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0], ["‚û°Ô∏è–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏", 1]],
  ],
  saveValue("form:source", 0, 1)
);

export const $played = optionsField(
  async state => {
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –î–æ—Å–≤—ñ–¥ –≤ –ù–†–Ü</u></b>\n\n–ß–∏ –º–∞—î—à —Ç–∏ –¥–æ—Å–≤—ñ–¥ —É –ù–∞—Å—Ç—ñ–ª—å–Ω–∏—Ö –†–æ–ª—å–æ–≤–∏—Ö –Ü–≥—Ä–∞—Ö (–ù–†–Ü)?\n\n‚ùó–Ø–∫—â–æ —Ç–∏ –Ω–µ –∑–Ω–∞—î—à —â–æ —Ü–µ - –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –æ–∑–Ω–∞–π–æ–º—Å—è –∑ <a href=\"https://nri.fandom.com/uk/wiki/%D0%9D%D0%B0%D1%81%D1%82%D1%96%D0%BB%D1%8C%D0%BD%D1%96_%D1%80%D0%BE%D0%BB%D1%8C%D0%BE%D0%B2%D1%96_%D1%96%D0%B3%D1%80%D0%B8\">–¶–Ü–Ñ–Æ –°–¢–ê–¢–¢–ï–Æ</a> –ø–µ—Ä–µ–¥ —Ç–∏–º, —è–∫ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏!";
  },
  [
    [["–ú–∞—é –¥–æ—Å–≤—ñ–¥ –≥—Ä–∏", 1]],
    [["–ù–µ –º–∞—é –¥–æ—Å–≤—ñ–¥—É, –∞–ª–µ —Ü—ñ–∫–∞–≤–æ", 2]],
    [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0]],
  ],
  saveValue("form:played", 0)
);

export const $gamesPlayed = optionsField(
  async state => {
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –î–æ—Å–≤—ñ–¥ –≤ –ù–†–Ü</u></b>\n\n–°–∫—ñ–ª—å–∫–∏ –≤ —Ç–µ–±–µ –¥–æ—Å–≤—ñ–¥—É –≤ –ù–†–Ü —è–∫ –≥—Ä–∞–≤—Ü—è?"
  },
  [
    [["–î–æ 5 —Å–µ—Å—ñ–π", 1]],
    [["–í—ñ–¥ 5 –¥–æ 10 —Å–µ—Å—ñ–π", 2]],
    [["–í—ñ–¥ 10 –¥–æ 50 —Å–µ—Å—ñ–π", 3]],
    [["–ü–æ–Ω–∞–¥ 50 —Å–µ—Å—ñ–π", 4]],
    [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0]],
  ],
  saveValue("form:gamesPlayed", 0),
);

export const $systemsPlayed = optionsOtherField(
  "lastInput",
  async state => {
    const list: string[] = [];
    for(const i in state.data.options) {
      const [part, field, ...rest] = i.split(":");
      const value = rest.join(":");
      const status = state.data.options[i];
      if(part === "form" && field === "systemsPlayed" && text()(value) && status)
        list.push(value);
    }
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –î–æ—Å–≤—ñ–¥ –≤ –ù–†–Ü</u></b>\n\n–£ —è–∫—ñ –ù–∞—Å—Ç—ñ–ª—å–Ω—ñ –†–æ–ª—å–æ–≤—ñ –°–∏—Å—Ç–µ–º–∏ —Ç–∏ –≥—Ä–∞–≤(–ª–∞/–ª–∏)?\n\n–¢–∏ –º–æ–∂–µ—à –¥–æ–¥–∞—Ç–∏ –≤–ª–∞—Å–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏, –≤–≤—ñ–≤—à–∏ —ó—Ö —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ. –©–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ –≤–≤–µ–¥–µ–Ω–∏–π –≤—Ä—É—á–Ω—É –≤–∞—Ä—ñ–∞–Ω—Ç, –≤–≤–µ–¥–∏ –π–æ–≥–æ –Ω–∞–∑–≤—É —â–µ —Ä–∞–∑!\n\n–í–≤–µ–¥–µ–Ω—ñ –≤—Ä—É—á–Ω—É: " + list.join(";");
  },
  toggleButtons(
    "form:systemsPlayed", 
    [
      [["–î–Ω–î", 2]],
      [["–ö—ñ–±–µ—Ä–ø–∞–Ω–∫", 3]],
      [["–°–∞–≤–∞–≥–∞", 4]],
      [["–ê—Ä—Ö–µ—Ç–µ—Ä–∏–∫–∞", 5]],
      [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0], ["‚û°Ô∏è–î–∞–ª—ñ", 1]],
    ],
    "‚úÖ ",
    "",
    0, 1),
  text(),
  toggleValue("form:systemsPlayed", 0, 1),
  toggleValueInput("form:systemsPlayed")
);

export const $playGameTypes = optionsField(
  async state => {
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –î–æ—Å–≤—ñ–¥ –≤ –ù–†–Ü</u></b>\n\n–£ —è–∫—ñ –≤–∏–¥–∏ –ù–†–Ü —Ç–∏ —Ö–æ—á–µ—à –≥—Ä–∞—Ç–∏?\n\n<b>–°–µ—Å—ñ—è</b> - –∑–∞–∑–≤–∏—á–∞–π —Ç—Ä–∏–≤–∞—î 3-6 –≥–æ–¥–∏–Ω\n<b>–í–∞–Ω—à–æ—Ç</b> - —Ü—ñ–ª—ñ—Å–Ω–∞ –≥—Ä–∞ –Ω–∞ –æ–¥–Ω—É —Å–µ—Å—ñ—é\n<b>–ú—ñ–Ω—ñ-–∫–∞–º–ø–∞–Ω—ñ—è</b> - –≥—Ä–∞ –¥–æ 5 —Å–µ—Å—ñ–π\n<b>–ö–∞–º–ø–∞–Ω—ñ—è</b> - –≥—Ä–∞, —â–æ —Ç—Ä–∏–≤–∞—î –±—ñ–ª—å—à–µ 5 —Å–µ—Å—ñ–π. –ú–æ–∂–µ –≥—Ä–∞—Ç–∏—Å—è —Ä–æ–∫–∞–º–∏ :)";
  },
  toggleButtons(
    "form:playGameTypes", 
    [
      [["–í–∞–Ω—à–æ—Ç–∏", 2]],
      [["–ú—ñ–Ω—ñ-–∫–∞–º–ø–∞–Ω—ñ—ó", 3]],
      [["–î–æ–≤–≥—ñ –∫–∞–º–ø–∞–Ω—ñ—ó", 4]],
      [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0], ["‚û°Ô∏è–î–∞–ª—ñ", 1]],
    ], 
    "‚úÖ ",
    "", 
    0, 1),
  toggleValue("form:playGameTypes", 0, 1)
);

export const $mastered = optionsField(
  async state => {
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –î–æ—Å–≤—ñ–¥ –≤ –ù–†–Ü</u></b>\n\n–ß–∏ —î –≤ —Ç–µ–±–µ –¥–æ—Å–≤—ñ–¥ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –≤–ª–∞—Å–Ω–∏—Ö —ñ–≥–æ—Ä (—è–∫ –º–∞–π—Å—Ç–µ—Ä)?\n\n–ú–∞–π—Å—Ç–µ—Ä - —Ü–µ –≤–µ–¥—É—á–∏–π –≥—Ä–∏, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –ø—Ä–∞–≤–∏–ª–∞, —Å–≤—ñ—Ç —Ç–∞ –Ω–µ—ñ–≥—Ä–æ–≤–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ —É –Ω—å–æ–º—É.";
  },
  [
    [["–ü—Ä–æ–≤–æ–¥–∏–≤ —ñ–≥—Ä–∏", 1]],
    [["–•–æ—á—É —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –ø—Ä–æ–≤–µ—Å—Ç–∏", 2]],
    [["–ù–µ –ø—Ä–æ–≤–æ–¥–∏–≤(–ª–∞/–ª–∏) —ñ–≥—Ä–∏ –π –Ω–µ —Ö–æ—á—É", 3]],
    [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0]],
  ],
  saveValue("form:mastered", 0)
);

export const $gamesMastered = optionsField(
  async state => {
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –î–æ—Å–≤—ñ–¥ –≤ –ù–†–Ü</u></b>\n\n–°–∫—ñ–ª—å–∫–∏ —Å–µ—Å—ñ–π —Ç–∏ –ø—Ä–æ–≤—ñ–≤/–ø—Ä–æ–≤–µ–ª–∞/–ø—Ä–æ–≤–µ–ª–∏ —è–∫ –º–∞–π—Å—Ç–µ—Ä?";
  },
  [
    [["–î–æ 5 —Å–µ—Å—ñ–π", 1]],
    [["–í—ñ–¥ 6 –¥–æ 10 —Å–µ—Å—ñ–π", 2]],
    [["–í—ñ–¥ 11 –¥–æ 50 —Å–µ—Å—ñ–π", 3]],
    [["–ü–æ–Ω–∞–¥ 50 —Å–µ—Å—ñ–π", 4]],
    [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0]],
  ],
  saveValue("form:gamesMastered", 0)
);

export const $systemsMastered = optionsOtherField(
  "lastInput",
  async state => {
    const list: string[] = [];
    for(const i in state.data.options) {
      const [part, field, ...rest] = i.split(":");
      const value = rest.join(":");
      const status = state.data.options[i];
      if(part === "form" && field === "systemsMastered" && text()(value) && status)
        list.push(value);
    }
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –î–æ—Å–≤—ñ–¥ –≤ –ù–†–Ü</u></b>\n\n–Ø–∫—ñ –ù–∞—Å—Ç—ñ–ª—å–Ω—ñ –†–æ–ª—å–æ–≤—ñ –°–∏—Å—Ç–µ–º–∏ —Ç–∏ –≤–æ–¥–∏–≤(–ª–∞/–ª–∏)?\n\n–¢–∏ –º–æ–∂–µ—à –¥–æ–¥–∞—Ç–∏ –≤–ª–∞—Å–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏, –≤–≤—ñ–≤—à–∏ —ó—Ö —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ. –©–æ–± –ø—Ä–∏–±—Ä–∞—Ç–∏ –≤–≤–µ–¥–µ–Ω–∏–π –≤—Ä—É—á–Ω—É –≤–∞—Ä—ñ–∞–Ω—Ç, –≤–≤–µ–¥–∏ –π–æ–≥–æ –Ω–∞–∑–≤—É —â–µ —Ä–∞–∑!\n\n–í–≤–µ–¥–µ–Ω—ñ –≤—Ä—É—á–Ω—É: " + list.join(";");
  },
  toggleButtons(
    "form:systemsMastered", 
    [
      [["–î–Ω–î", 2]],
      [["–ö—ñ–±–µ—Ä–ø–∞–Ω–∫", 3]],
      [["–°–∞–≤–∞–≥–∞", 4]],
      [["–ê—Ä—Ö–µ—Ç–µ—Ä–∏–∫–∞", 5]],
      [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0], ["‚û°Ô∏è–î–∞–ª—ñ", 1]],
    ], 
    "‚úÖ ",
    "", 
    0, 1),
  text(),
  toggleValue("form:systemsMastered", 0, 1),
  toggleValueInput("form:systemsMastered")
);

export const $masterGameTypes = optionsField(
  async state => {
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –î–æ—Å–≤—ñ–¥ –≤ –ù–†–Ü</u></b>\n\n–Ø–∫—ñ –≤–∏–¥–∏ –ù–†–Ü —Ç–∏ —Ö–æ—á–µ—à –≤–æ–¥–∏—Ç–∏ —è–∫ –º–∞–π—Å—Ç–µ—Ä?\n\n<b>–°–µ—Å—ñ—è</b> - –∑–∞–∑–≤–∏—á–∞–π —Ç—Ä–∏–≤–∞—î 3-6 –≥–æ–¥–∏–Ω\n<b>–í–∞–Ω—à–æ—Ç</b> - —Ü—ñ–ª—ñ—Å–Ω–∞ –≥—Ä–∞ –Ω–∞ –æ–¥–Ω—É —Å–µ—Å—ñ—é\n<b>–ú—ñ–Ω—ñ-–∫–∞–º–ø–∞–Ω—ñ—è</b> - –≥—Ä–∞ –¥–æ 5 —Å–µ—Å—ñ–π\n<b>–ö–∞–º–ø–∞–Ω—ñ—è</b> - –≥—Ä–∞, —â–æ —Ç—Ä–∏–≤–∞—î –±—ñ–ª—å—à–µ 5 —Å–µ—Å—ñ–π. –ú–æ–∂–µ –≥—Ä–∞—Ç–∏—Å—è —Ä–æ–∫–∞–º–∏ :)"
  },
  toggleButtons(
    "form:masterGameTypes", 
    [
      [["–í–∞–Ω—à–æ—Ç–∏", 2]],
      [["–ú—ñ–Ω—ñ-–∫–∞–º–ø–∞–Ω—ñ—ó", 3]],
      [["–î–æ–≤–≥—ñ –∫–∞–º–ø–∞–Ω—ñ—ó", 4]],
      [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0], ["‚û°Ô∏è–î–∞–ª—ñ", 1]],
    ], 
    "‚úÖ ",
    "", 
    0, 1),
  toggleValue("form:masterGameTypes", 0, 1)
);

export const $formDone = optionsField(
  async state => {
    return "<b><u>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è: –ó–∞—Ö–∏—Å—Ç –î–∞–Ω–∏—Ö</u></b>\n\n–í—Å—ñ –ø–æ–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–æ!\n\n–©–æ–± –∑–∞–≤–µ—Ä—à–∏—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –ø–µ—Ä–µ–≤—ñ—Ä —á–∏ –≤—Å—ñ –¥–∞–Ω—ñ –≤–∫–∞–∑–∞–Ω–æ –≤—ñ—Ä–Ω–æ —Ç–∞ –¥–∞–π –¥–æ–∑–≤—ñ–ª –Ω–∞ –æ–±—Ä–æ–±–∫—É —Ü–∏—Ö –¥–∞–Ω–∏—Ö –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ—é –†–∞–¥–æ—é –ú—Ä—ñ—î—Ç–≤–æ—Ä—Ü—ñ–≤ —Ç–∞ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ–π–Ω–∏–º –û—Ä–≥–∞–Ω–æ–º –û—Å–µ—Ä–µ–¥–∫—É [–¢–£–¢ –ù–ê–ó–í–ê –û–°–ï–†–ï–î–ö–£]";
  },
  [
    [["‚¨ÖÔ∏è–ù–∞–∑–∞–¥", 0], ["‚úÖ –î–∞—é –¥–æ–∑–≤—ñ–ª!", 1]],
  ],
  async (state, buttons) => {
    const data = getLastCallback(state, buttons);
    if(data === 0) return;
    console.log(state.data.options);
    console.log(Object.values(state.core.inputs).map(msg => msg?.text));
  }
);

export const $formSent = optionsField(
  async state => {
    return "<b><u>‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ</u></b>\n\n–ü—Ä–∏—î–¥–Ω—É–π—Å—è –¥–æ —á–∞—Ç—ñ–≤ —Å–≤–æ–≥–æ –û—Å–µ—Ä–µ–¥–∫—É –ú—Ä—ñ—î—Ç–≤–æ—Ä—Ü—ñ–≤!\n\nüëâ–ß–∞—Ç 1\nüëâ–ß–∞—Ç 2\nüëâ–ß–∞—Ç 3";
  },
  [
    [["–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", 0]],
  ]
);
